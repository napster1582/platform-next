import { fontFamily } from 'tailwindcss/defaultTheme';

/** @type {import('tailwindcss').Config} */
export default {
	content: ['./**/*.{js,ts,jsx,tsx,html,svelte}'],
	safelist: [
		{
			pattern: /(bg|text|col-span)-./,
		},
	],
	darkMode: 'class',
	theme: {
		fontFamily: {
			sans: ['Inter', ...fontFamily.sans],
			serif: ['Castoro', ...fontFamily.serif],
			mono: ['JetBrains Mono', ...fontFamily.mono],
			display: ['Inter', ...fontFamily.sans],
			handwriting: ['Indie Flower', 'cursive'],
		},
		container: {
			center: true,
			padding: '1.5rem',
		},
		colors: {
			transparent: 'transparent',
			current: 'currentColor',
			white: '#ffffff',
			black: '#000000',
			gray: {
				50: 'rgb(var(--color-gray-50) / <alpha-value>)',
				100: 'rgb(var(--color-gray-100) / <alpha-value>)',
				200: 'rgb(var(--color-gray-200) / <alpha-value>)',
				300: 'rgb(var(--color-gray-300) / <alpha-value>)',
				400: 'rgb(var(--color-gray-400) / <alpha-value>)',
				500: 'rgb(var(--color-gray-500) / <alpha-value>)',
				600: 'rgb(var(--color-gray-600) / <alpha-value>)',
				700: 'rgb(var(--color-gray-700) / <alpha-value>)',
				800: 'rgb(var(--color-gray-800) / <alpha-value>)',
				900: 'rgb(var(--color-gray-900) / <alpha-value>)',
				950: 'rgb(var(--color-gray-950) / <alpha-value>)',
			},
			purple: {
				50: 'rgb(var(--color-purple-50) / <alpha-value>)',
				100: 'rgb(var(--color-purple-100) / <alpha-value>)',
				200: 'rgb(var(--color-purple-200) / <alpha-value>)',
				300: 'rgb(var(--color-purple-300) / <alpha-value>)',
				400: 'rgb(var(--color-purple-400) / <alpha-value>)',
				500: 'rgb(var(--color-purple-500) / <alpha-value>)',
				600: 'rgb(var(--color-purple-600) / <alpha-value>)',
				700: 'rgb(var(--color-purple-700) / <alpha-value>)',
				800: 'rgb(var(--color-purple-800) / <alpha-value>)',
				900: 'rgb(var(--color-purple-900) / <alpha-value>)',
				950: 'rgb(var(--color-purple-950) / <alpha-value>)',
			},
			green: {
				50: 'rgb(var(--color-green-50) / <alpha-value>)',
				100: 'rgb(var(--color-green-100) / <alpha-value>)',
				200: 'rgb(var(--color-green-200) / <alpha-value>)',
				300: 'rgb(var(--color-green-300) / <alpha-value>)',
				400: 'rgb(var(--color-green-400) / <alpha-value>)',
				500: 'rgb(var(--color-green-500) / <alpha-value>)',
				600: 'rgb(var(--color-green-600) / <alpha-value>)',
				700: 'rgb(var(--color-green-700) / <alpha-value>)',
				800: 'rgb(var(--color-green-800) / <alpha-value>)',
				900: 'rgb(var(--color-green-900) / <alpha-value>)',
				950: 'rgb(var(--color-green-950) / <alpha-value>)',
			},
			blue: {
				50: 'rgb(var(--color-blue-50) / <alpha-value>)',
				100: 'rgb(var(--color-blue-100) / <alpha-value>)',
				200: 'rgb(var(--color-blue-200) / <alpha-value>)',
				300: 'rgb(var(--color-blue-300) / <alpha-value>)',
				400: 'rgb(var(--color-blue-400) / <alpha-value>)',
				500: 'rgb(var(--color-blue-500) / <alpha-value>)',
				600: 'rgb(var(--color-blue-600) / <alpha-value>)',
				700: 'rgb(var(--color-blue-700) / <alpha-value>)',
				800: 'rgb(var(--color-blue-800) / <alpha-value>)',
				900: 'rgb(var(--color-blue-900) / <alpha-value>)',
				950: 'rgb(var(--color-blue-950) / <alpha-value>)',
			},
			red: {
				50: 'rgb(var(--color-red-50) / <alpha-value>)',
				100: 'rgb(var(--color-red-100) / <alpha-value>)',
				200: 'rgb(var(--color-red-200) / <alpha-value>)',
				300: 'rgb(var(--color-red-300) / <alpha-value>)',
				400: 'rgb(var(--color-red-400) / <alpha-value>)',
				500: 'rgb(var(--color-red-500) / <alpha-value>)',
				600: 'rgb(var(--color-red-600) / <alpha-value>)',
				700: 'rgb(var(--color-red-700) / <alpha-value>)',
				800: 'rgb(var(--color-red-800) / <alpha-value>)',
				900: 'rgb(var(--color-red-900) / <alpha-value>)',
				950: 'rgb(var(--color-red-950) / <alpha-value>)',
			},
			yellow: {
				50: 'rgb(var(--color-yellow-50) / <alpha-value>)',
				100: 'rgb(var(--color-yellow-100) / <alpha-value>)',
				200: 'rgb(var(--color-yellow-200) / <alpha-value>)',
				300: 'rgb(var(--color-yellow-300) / <alpha-value>)',
				400: 'rgb(var(--color-yellow-400) / <alpha-value>)',
				500: 'rgb(var(--color-yellow-500) / <alpha-value>)',
				600: 'rgb(var(--color-yellow-600) / <alpha-value>)',
				700: 'rgb(var(--color-yellow-700) / <alpha-value>)',
				800: 'rgb(var(--color-yellow-800) / <alpha-value>)',
				900: 'rgb(var(--color-yellow-900) / <alpha-value>)',
				950: 'rgb(var(--color-yellow-950) / <alpha-value>)',
			},
		},
		extend: {
			backgroundColor: {
				'token-primary': 'var(--color-bg-primary)',
				'token-secondary': 'var(--color-bg-secondary)',
				'token-tertiary': 'var(--color-bg-tertiary)',
			},
			textColor: {
				'token-primary': 'var(--color-fg-primary)',
				'token-secondary': 'var(--color-fg-secondary)',
			},
			borderColor: {
				token: 'var(--color-border)',
			},
			ringColor: {
				token: 'var(--color-border)',
			},
			fill: {
				'token-primary': 'var(--color-bg-primary)',
				'token-secondary': 'var(--color-bg-secondary)',
				'token-tertiary': 'var(--color-bg-tertiary)',
			},
			borderRadius: {
				token: 'var(--radius)',
			},
			colors: {
				primary: {
					50: 'rgb(var(--color-primary-50) / <alpha-value>)',
					100: 'rgb(var(--color-primary-100) / <alpha-value>)',
					200: 'rgb(var(--color-primary-200) / <alpha-value>)',
					300: 'rgb(var(--color-primary-300) / <alpha-value>)',
					400: 'rgb(var(--color-primary-400) / <alpha-value>)',
					500: 'rgb(var(--color-primary-500) / <alpha-value>)',
					600: 'rgb(var(--color-primary-600) / <alpha-value>)',
					700: 'rgb(var(--color-primary-700) / <alpha-value>)',
					800: 'rgb(var(--color-primary-800) / <alpha-value>)',
					900: 'rgb(var(--color-primary-900) / <alpha-value>)',
					950: 'rgb(var(--color-primary-950) / <alpha-value>)',
				},
			},
			fontSize: {
				h1: 'var(--font-size-h1)',
				h2: 'var(--font-size-h2)',
				h3: 'var(--font-size-h3)',
				h4: 'var(--font-size-h4)',
				h5: 'var(--font-size-h5)',
				h6: 'var(--font-size-h6)',
				body: 'var(--font-size-body)',
			},
		},
	},
	plugins: [require('@tailwindcss/typography')],
};
